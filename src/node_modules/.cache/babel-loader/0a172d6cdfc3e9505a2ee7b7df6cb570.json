{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Donny/Desktop/dope-kegz-2/src/components/KegControl.js\";\nimport React from \"react\";\nimport EditKegForm from \"./EditKegForm\";\nimport KegDetail from \"./KegDetail\";\nimport KegList from \"./KegList\";\nimport PropTypes from 'prop-types';\nimport NewKegForm from \"./NewKegForm\";\nimport * as a from '../actions';\nimport { connect } from 'react-redux';\n\nclass KegControl extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      const {\n        dispatch\n      } = this.props;\n\n      if (this.props.selectedKeg != null) {\n        const action = a.deselectKeg();\n        dispatch(action);\n      } else {\n        const action = a.toggleNewForm();\n        dispatch(action);\n      }\n\n      ;\n    };\n\n    this.handleAddingNewKegToList = newKeg => {\n      const {\n        dispatch\n      } = this.props;\n      const action = a.addKeg(newKeg);\n      dispatch(action);\n      const action2 = a.toggleNewForm();\n      dispatch(action2);\n    };\n\n    this.handleChangingSelectedKeg = id => {\n      const {\n        dispatch\n      } = this.props;\n      const selectedKeg = this.props.masterKegList[id];\n      const action = a.selectKeg(selectedKeg);\n      dispatch(action);\n    };\n\n    this.handleDeletingKeg = id => {\n      const {\n        dispatch\n      } = this.props;\n      const action = a.deleteKeg(id);\n      dispatch(action);\n    };\n\n    this.handleEditClick = id => {\n      console.log(\"clicked\");\n      const {\n        dispatch\n      } = this.props;\n\n      if (this.props.selectedKeg === null) {\n        const kegToEdit = this.props.masterKegList[id];\n        dispatch(a.selectKeg(kegToEdit));\n      } else {\n        dispatch(a.deselectKeg());\n      }\n\n      dispatch(a.toggleEditForm());\n    };\n\n    this.handleEditingKegInList = kegToEdit => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(a.addKeg(kegToEdit));\n      dispatch(a.deselectKeg());\n      dispatch(a.toggleEditForm());\n    };\n  }\n\n  // handlePouringAPint = (kegToPourFrom) => {\n  //   const editedMasterKegList = this.state.masterKegList.filter(keg => keg.id !== this.state.selectedKeg.id).concat(kegToPourFrom);\n  //   this.setState({ \n  //     masterKegList: editedMasterKegList,\n  //     selectedKeg: kegToPourFrom\n  //   });\n  //   console.log(kegToPourFrom.pints)\n  // }\n  render() {\n    let currentlyVisibleState = null;\n    let buttonText = null;\n\n    if (this.props.editFormVisibleOnPage) {\n      currentlyVisibleState = /*#__PURE__*/_jsxDEV(EditKegForm, {\n        keg: this.props.selectedKeg,\n        onEditKeg: this.handleEditingKegInList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 31\n      }, this);\n      buttonText = \"Back to all the kegs!\";\n    } else if (this.props.selectedKeg != null) {\n      currentlyVisibleState = /*#__PURE__*/_jsxDEV(KegDetail, {\n        keg: this.props.selectedKeg,\n        onClickingDelete: this.handleDeletingKeg,\n        onClickingEdit: this.handleEditClick,\n        onPouringAPint: this.handlePouringAPint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 31\n      }, this);\n      buttonText = \"Back to all the kegs!\";\n    } else if (this.props.newFormVisibleOnPage) {\n      currentlyVisibleState = /*#__PURE__*/_jsxDEV(NewKegForm, {\n        onNewKegCreation: this.handleAddingNewKegToList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 31\n      }, this);\n      buttonText = \"Back to all the kegs!\";\n    } else {\n      currentlyVisibleState = /*#__PURE__*/_jsxDEV(KegList, {\n        kegList: this.props.masterKegList,\n        onKegSelection: this.handleChangingSelectedKeg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 31\n      }, this);\n      buttonText = \"Add Keg!\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [currentlyVisibleState, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    masterKegList: state.masterKegList,\n    editFormVisibleOnPage: state.editFormVisibleOnPage,\n    newFormVisibleOnPage: state.newFormVisibleOnPage,\n    selectedKeg: state.selectedKeg\n  };\n};\n\nKegControl.propTypes = {\n  masterKegList: PropTypes.object,\n  editFormVisibleOnPage: PropTypes.bool,\n  newFormVisibleOnPage: PropTypes.bool,\n  selectedKeg: PropTypes.object\n};\nKegControl = connect(mapStateToProps)(KegControl);\nexport default KegControl;","map":{"version":3,"sources":["/Users/Donny/Desktop/dope-kegz-2/src/components/KegControl.js"],"names":["React","EditKegForm","KegDetail","KegList","PropTypes","NewKegForm","a","connect","KegControl","Component","handleClick","dispatch","props","selectedKeg","action","deselectKeg","toggleNewForm","handleAddingNewKegToList","newKeg","addKeg","action2","handleChangingSelectedKeg","id","masterKegList","selectKeg","handleDeletingKeg","deleteKeg","handleEditClick","console","log","kegToEdit","toggleEditForm","handleEditingKegInList","render","currentlyVisibleState","buttonText","editFormVisibleOnPage","handlePouringAPint","newFormVisibleOnPage","mapStateToProps","state","propTypes","object","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport EditKegForm from \"./EditKegForm\";\nimport KegDetail from \"./KegDetail\";\nimport KegList from \"./KegList\";\nimport PropTypes from 'prop-types';\nimport NewKegForm from \"./NewKegForm\";\nimport * as a from '../actions';\nimport { connect } from 'react-redux';\n\nclass KegControl extends React.Component {\n  handleClick = () => {\n    const { dispatch } = this.props;\n    if (this.props.selectedKeg != null) {\n      const action = a.deselectKeg();\n      dispatch(action);\n    } else {\n      const action = a.toggleNewForm();\n      dispatch(action);\n    };\n  };\n\n  handleAddingNewKegToList = (newKeg) => {\n    const { dispatch } = this.props;\n    const action = a.addKeg(newKeg);\n    dispatch(action);\n    const action2 = a.toggleNewForm();\n    dispatch(action2);\n  }\n\n  handleChangingSelectedKeg = (id) => {\n    const { dispatch } = this.props;\n    const selectedKeg = this.props.masterKegList[id];\n    const action = a.selectKeg(selectedKeg);\n    dispatch(action);\n  }\n\n  handleDeletingKeg = (id) => {\n   const { dispatch } = this.props;\n   const action = a.deleteKeg(id);\n   dispatch(action);\n  }\n  \n\n  handleEditClick = (id) => {\n    console.log(\"clicked\");\n    const { dispatch } = this.props;\n    if (this.props.selectedKeg === null) {\n      const kegToEdit = this.props.masterKegList[id];\n      dispatch(a.selectKeg(kegToEdit));\n    } else {\n      dispatch(a.deselectKeg())\n    }\n    dispatch(a.toggleEditForm())\n  }\n\n  handleEditingKegInList = (kegToEdit) => {\n    const { dispatch } = this.props;\n    dispatch(a.addKeg(kegToEdit));\n    dispatch(a.deselectKeg());\n    dispatch(a.toggleEditForm());\n  }\n\n  // handlePouringAPint = (kegToPourFrom) => {\n  //   const editedMasterKegList = this.state.masterKegList.filter(keg => keg.id !== this.state.selectedKeg.id).concat(kegToPourFrom);\n  //   this.setState({ \n  //     masterKegList: editedMasterKegList,\n  //     selectedKeg: kegToPourFrom\n  //   });\n  //   console.log(kegToPourFrom.pints)\n  // }\n\n  render(){\n    let currentlyVisibleState = null;\n    let buttonText =  null;\n\n    if (this.props.editFormVisibleOnPage) {\n      currentlyVisibleState = <EditKegForm keg = {this.props.selectedKeg} onEditKeg = {this.handleEditingKegInList} />\n      buttonText = \"Back to all the kegs!\";\n    } else if (this.props.selectedKeg != null) {\n      currentlyVisibleState = <KegDetail\n        keg = {this.props.selectedKeg}\n        onClickingDelete = {this.handleDeletingKeg}\n        onClickingEdit = {this.handleEditClick}\n        onPouringAPint = {this.handlePouringAPint} />\n      buttonText = \"Back to all the kegs!\";\n    } else if (this.props.newFormVisibleOnPage) {\n      currentlyVisibleState = <NewKegForm onNewKegCreation={this.handleAddingNewKegToList} />;\n      buttonText = \"Back to all the kegs!\";\n    } else {\n      currentlyVisibleState = <KegList \n        kegList = {this.props.masterKegList}\n        onKegSelection={this.handleChangingSelectedKeg} />;\n        buttonText = \"Add Keg!\"\n    }\n    return (\n      <React.Fragment>\n        {currentlyVisibleState}\n        <button onClick={this.handleClick}>{buttonText}</button>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    masterKegList: state.masterKegList,\n    editFormVisibleOnPage: state.editFormVisibleOnPage,\n    newFormVisibleOnPage: state.newFormVisibleOnPage,\n    selectedKeg: state.selectedKeg\n  }\n}\n\nKegControl.propTypes = {\n  masterKegList: PropTypes.object,\n  editFormVisibleOnPage: PropTypes.bool,\n  newFormVisibleOnPage: PropTypes.bool,\n  selectedKeg: PropTypes.object\n}\n\nKegControl = connect(mapStateToProps)(KegControl)\n\nexport default KegControl;\n"]},"metadata":{},"sourceType":"module"}