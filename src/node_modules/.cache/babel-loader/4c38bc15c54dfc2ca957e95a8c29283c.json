{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Donny/Desktop/dope-kegz/src/components/KegControl.js\";\nimport React from \"react\";\nimport EditKegForm from \"./EditKegForm\";\nimport KegDetail from \"./KegDetail\";\nimport KegList from \"./KegList\";\nimport NewKegForm from \"./NewKegForm\";\nimport { v4 } from 'uuid';\n\nclass KegControl extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      if (this.state.selectedKeg != null) {\n        this.setState({\n          formVisibleOnPage: false,\n          selectedKeg: null,\n          editing: false\n        });\n      } else {\n        this.setState(prevState => ({\n          formVisibleOnPage: !prevState.formVisibleOnPage\n        }));\n      }\n    };\n\n    this.handleAddingNewKegToList = newKeg => {\n      const newMasterKegList = this.state.masterKegList.concat(newKeg);\n      this.setState({\n        masterKegList: newMasterKegList,\n        formVisibleOnPage: false\n      });\n    };\n\n    this.handleChangingSelectedKeg = id => {\n      const selectedKeg = this.state.masterKegList.filter(keg => keg.id === id)[0];\n      this.setState({\n        selectedKeg: selectedKeg\n      });\n    };\n\n    this.handleDeletingKeg = id => {\n      const newMasterKegList = this.state.masterKegList.filter(keg => keg.id !== id);\n      this.setState({\n        masterKegList: newMasterKegList,\n        selectedKeg: null\n      });\n    };\n\n    this.handleEditClick = () => {\n      this.setState({\n        editing: true\n      });\n    };\n\n    this.handleEditingKegInList = kegToEdit => {\n      const editedMasterKegList = this.state.masterKegList.filter(keg => keg.id !== this.state.selectedKeg.id).concat(kegToEdit);\n      this.setState({\n        masterKegList: editedMasterKegList,\n        editing: false,\n        selectedKeg: null\n      });\n    };\n\n    this.handlePouringAPint = kegToPourFrom => {\n      const editedMasterKegList = this.state.masterKegList.filter(keg => keg.id !== this.state.selectedKeg.id).concat(kegToPourFrom);\n      this.setState({\n        masterKegList: editedMasterKegList,\n        selectedKeg: kegToPourFrom\n      });\n      console.log(kegToPourFrom.pints);\n    };\n\n    this.state = {\n      formVisibleOnPage: false,\n      masterKegList: [{\n        name: \"Beer\",\n        brand: \"Good Beer\",\n        price: '85',\n        ABV: '6',\n        pints: 3,\n        id: v4()\n      }, {\n        name: \"Ale\",\n        brand: \"Good Ale\",\n        price: '75',\n        ABV: '7',\n        pints: 124,\n        id: v4()\n      }, {\n        name: \"Lager\",\n        brand: \"Good Lager\",\n        price: '80',\n        ABV: '4',\n        pints: 124,\n        id: v4()\n      }],\n      selectedKeg: null,\n      editing: false\n    };\n  }\n\n  render() {\n    let currentlyVisibleState = null;\n    let buttonText = null;\n\n    if (this.state.editing) {\n      currentlyVisibleState = /*#__PURE__*/_jsxDEV(EditKegForm, {\n        keg: this.state.selectedKeg,\n        onEditKeg: this.handleEditingKegInList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 31\n      }, this);\n      buttonText = \"Back to all the kegs!\";\n    } else if (this.state.selectedKeg != null) {\n      currentlyVisibleState = /*#__PURE__*/_jsxDEV(KegDetail, {\n        keg: this.state.selectedKeg,\n        onClickingDelete: this.handleDeletingKeg,\n        onClickingEdit: this.handleEditClick,\n        onPouringAPint: this.handlePouringAPint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 31\n      }, this);\n      buttonText = \"Back to all the kegs!\";\n    } else if (this.state.formVisibleOnPage) {\n      currentlyVisibleState = /*#__PURE__*/_jsxDEV(NewKegForm, {\n        onNewKegCreation: this.handleAddingNewKegToList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 31\n      }, this);\n      buttonText = \"Back to all the kegs!\";\n    } else {\n      currentlyVisibleState = /*#__PURE__*/_jsxDEV(KegList, {\n        kegList: this.state.masterKegList,\n        onKegSelection: this.handleChangingSelectedKeg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 31\n      }, this);\n      buttonText = \"Add Keg!\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [currentlyVisibleState, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default KegControl;","map":{"version":3,"sources":["/Users/Donny/Desktop/dope-kegz/src/components/KegControl.js"],"names":["React","EditKegForm","KegDetail","KegList","NewKegForm","v4","KegControl","Component","constructor","props","handleClick","state","selectedKeg","setState","formVisibleOnPage","editing","prevState","handleAddingNewKegToList","newKeg","newMasterKegList","masterKegList","concat","handleChangingSelectedKeg","id","filter","keg","handleDeletingKeg","handleEditClick","handleEditingKegInList","kegToEdit","editedMasterKegList","handlePouringAPint","kegToPourFrom","console","log","pints","name","brand","price","ABV","render","currentlyVisibleState","buttonText"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,EAAT,QAAmB,MAAnB;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,WAdmB,GAcL,MAAM;AAClB,UAAI,KAAKC,KAAL,CAAWC,WAAX,IAA0B,IAA9B,EAAoC;AAClC,aAAKC,QAAL,CAAc;AACZC,UAAAA,iBAAiB,EAAE,KADP;AAEZF,UAAAA,WAAW,EAAE,IAFD;AAGZG,UAAAA,OAAO,EAAE;AAHG,SAAd;AAKD,OAND,MAMO;AACL,aAAKF,QAAL,CAAcG,SAAS,KAAK;AAC1BF,UAAAA,iBAAiB,EAAE,CAACE,SAAS,CAACF;AADJ,SAAL,CAAvB;AAGD;AACF,KA1BkB;;AAAA,SA4BnBG,wBA5BmB,GA4BSC,MAAD,IAAY;AACrC,YAAMC,gBAAgB,GAAG,KAAKR,KAAL,CAAWS,aAAX,CAAyBC,MAAzB,CAAgCH,MAAhC,CAAzB;AACA,WAAKL,QAAL,CAAc;AAACO,QAAAA,aAAa,EAAED,gBAAhB;AACAL,QAAAA,iBAAiB,EAAE;AADnB,OAAd;AAED,KAhCkB;;AAAA,SAkCnBQ,yBAlCmB,GAkCUC,EAAD,IAAQ;AAClC,YAAMX,WAAW,GAAG,KAAKD,KAAL,CAAWS,aAAX,CAAyBI,MAAzB,CAAgCC,GAAG,IAAIA,GAAG,CAACF,EAAJ,KAAWA,EAAlD,EAAsD,CAAtD,CAApB;AACA,WAAKV,QAAL,CAAc;AAACD,QAAAA,WAAW,EAAEA;AAAd,OAAd;AACD,KArCkB;;AAAA,SAuCnBc,iBAvCmB,GAuCEH,EAAD,IAAQ;AAC1B,YAAMJ,gBAAgB,GAAG,KAAKR,KAAL,CAAWS,aAAX,CAAyBI,MAAzB,CAAgCC,GAAG,IAAIA,GAAG,CAACF,EAAJ,KAAWA,EAAlD,CAAzB;AACA,WAAKV,QAAL,CAAc;AACZO,QAAAA,aAAa,EAAED,gBADH;AAEZP,QAAAA,WAAW,EAAE;AAFD,OAAd;AAID,KA7CkB;;AAAA,SA+CnBe,eA/CmB,GA+CD,MAAM;AACtB,WAAKd,QAAL,CAAc;AAACE,QAAAA,OAAO,EAAE;AAAV,OAAd;AACD,KAjDkB;;AAAA,SAmDnBa,sBAnDmB,GAmDOC,SAAD,IAAe;AACtC,YAAMC,mBAAmB,GAAG,KAAKnB,KAAL,CAAWS,aAAX,CAAyBI,MAAzB,CAAgCC,GAAG,IAAIA,GAAG,CAACF,EAAJ,KAAW,KAAKZ,KAAL,CAAWC,WAAX,CAAuBW,EAAzE,EAA6EF,MAA7E,CAAoFQ,SAApF,CAA5B;AACA,WAAKhB,QAAL,CAAc;AACZO,QAAAA,aAAa,EAAEU,mBADH;AAEZf,QAAAA,OAAO,EAAE,KAFG;AAGZH,QAAAA,WAAW,EAAE;AAHD,OAAd;AAKD,KA1DkB;;AAAA,SA4DnBmB,kBA5DmB,GA4DGC,aAAD,IAAmB;AACtC,YAAMF,mBAAmB,GAAG,KAAKnB,KAAL,CAAWS,aAAX,CAAyBI,MAAzB,CAAgCC,GAAG,IAAIA,GAAG,CAACF,EAAJ,KAAW,KAAKZ,KAAL,CAAWC,WAAX,CAAuBW,EAAzE,EAA6EF,MAA7E,CAAoFW,aAApF,CAA5B;AACA,WAAKnB,QAAL,CAAc;AACZO,QAAAA,aAAa,EAAEU,mBADH;AAEZlB,QAAAA,WAAW,EAAEoB;AAFD,OAAd;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAa,CAACG,KAA1B;AACD,KAnEkB;;AAEjB,SAAKxB,KAAL,GAAa;AACXG,MAAAA,iBAAiB,EAAE,KADR;AAEXM,MAAAA,aAAa,EAAE,CACb;AAACgB,QAAAA,IAAI,EAAE,MAAP;AAAeC,QAAAA,KAAK,EAAE,WAAtB;AAAmCC,QAAAA,KAAK,EAAE,IAA1C;AAAgDC,QAAAA,GAAG,EAAE,GAArD;AAA0DJ,QAAAA,KAAK,EAAE,CAAjE;AAAoEZ,QAAAA,EAAE,EAAElB,EAAE;AAA1E,OADa,EAEb;AAAC+B,QAAAA,IAAI,EAAE,KAAP;AAAcC,QAAAA,KAAK,EAAE,UAArB;AAAiCC,QAAAA,KAAK,EAAE,IAAxC;AAA8CC,QAAAA,GAAG,EAAE,GAAnD;AAAwDJ,QAAAA,KAAK,EAAE,GAA/D;AAAoEZ,QAAAA,EAAE,EAAElB,EAAE;AAA1E,OAFa,EAGb;AAAC+B,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,KAAK,EAAE,YAAvB;AAAqCC,QAAAA,KAAK,EAAE,IAA5C;AAAkDC,QAAAA,GAAG,EAAE,GAAvD;AAA4DJ,QAAAA,KAAK,EAAE,GAAnE;AAAwEZ,QAAAA,EAAE,EAAElB,EAAE;AAA9E,OAHa,CAFJ;AAOXO,MAAAA,WAAW,EAAE,IAPF;AAQXG,MAAAA,OAAO,EAAE;AARE,KAAb;AAUD;;AAyDDyB,EAAAA,MAAM,GAAE;AACN,QAAIC,qBAAqB,GAAG,IAA5B;AACA,QAAIC,UAAU,GAAI,IAAlB;;AAEA,QAAI,KAAK/B,KAAL,CAAWI,OAAf,EAAwB;AACtB0B,MAAAA,qBAAqB,gBAAG,QAAC,WAAD;AAAa,QAAA,GAAG,EAAI,KAAK9B,KAAL,CAAWC,WAA/B;AAA4C,QAAA,SAAS,EAAI,KAAKgB;AAA9D;AAAA;AAAA;AAAA;AAAA,cAAxB;AACAc,MAAAA,UAAU,GAAG,uBAAb;AACD,KAHD,MAGO,IAAI,KAAK/B,KAAL,CAAWC,WAAX,IAA0B,IAA9B,EAAoC;AACzC6B,MAAAA,qBAAqB,gBAAG,QAAC,SAAD;AACtB,QAAA,GAAG,EAAI,KAAK9B,KAAL,CAAWC,WADI;AAEtB,QAAA,gBAAgB,EAAI,KAAKc,iBAFH;AAGtB,QAAA,cAAc,EAAI,KAAKC,eAHD;AAItB,QAAA,cAAc,EAAI,KAAKI;AAJD;AAAA;AAAA;AAAA;AAAA,cAAxB;AAKAW,MAAAA,UAAU,GAAG,uBAAb;AACD,KAPM,MAOA,IAAI,KAAK/B,KAAL,CAAWG,iBAAf,EAAkC;AACvC2B,MAAAA,qBAAqB,gBAAG,QAAC,UAAD;AAAY,QAAA,gBAAgB,EAAE,KAAKxB;AAAnC;AAAA;AAAA;AAAA;AAAA,cAAxB;AACAyB,MAAAA,UAAU,GAAG,uBAAb;AACD,KAHM,MAGA;AACLD,MAAAA,qBAAqB,gBAAG,QAAC,OAAD;AACtB,QAAA,OAAO,EAAI,KAAK9B,KAAL,CAAWS,aADA;AAEtB,QAAA,cAAc,EAAE,KAAKE;AAFC;AAAA;AAAA;AAAA;AAAA,cAAxB;AAGEoB,MAAAA,UAAU,GAAG,UAAb;AACH;;AACD,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,iBACGD,qBADH,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAK/B,WAAtB;AAAA,kBAAoCgC;AAApC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAnGsC;;AAsGzC,eAAepC,UAAf","sourcesContent":["import React from \"react\";\nimport EditKegForm from \"./EditKegForm\";\nimport KegDetail from \"./KegDetail\";\nimport KegList from \"./KegList\";\nimport NewKegForm from \"./NewKegForm\";\nimport { v4 } from 'uuid';\n\nclass KegControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formVisibleOnPage: false,\n      masterKegList: [\n        {name: \"Beer\", brand: \"Good Beer\", price: '85', ABV: '6', pints: 3, id: v4()},\n        {name: \"Ale\", brand: \"Good Ale\", price: '75', ABV: '7', pints: 124, id: v4()},\n        {name: \"Lager\", brand: \"Good Lager\", price: '80', ABV: '4', pints: 124, id: v4()},\n      ],\n      selectedKeg: null,\n      editing: false\n    };\n  }\n\n  handleClick = () => {\n    if (this.state.selectedKeg != null) {\n      this.setState({\n        formVisibleOnPage: false,\n        selectedKeg: null,\n        editing: false\n      })\n    } else {\n      this.setState(prevState => ({\n        formVisibleOnPage: !prevState.formVisibleOnPage\n      }));\n    }\n  }\n\n  handleAddingNewKegToList = (newKeg) => {\n    const newMasterKegList = this.state.masterKegList.concat(newKeg);\n    this.setState({masterKegList: newMasterKegList,\n                  formVisibleOnPage: false});\n  }\n\n  handleChangingSelectedKeg = (id) => {\n    const selectedKeg = this.state.masterKegList.filter(keg => keg.id === id)[0];\n    this.setState({selectedKeg: selectedKeg});\n  }\n\n  handleDeletingKeg = (id) => {\n    const newMasterKegList = this.state.masterKegList.filter(keg => keg.id !== id);\n    this.setState({\n      masterKegList: newMasterKegList,\n      selectedKeg: null\n    });\n  }\n\n  handleEditClick = () => {\n    this.setState({editing: true});\n  }\n\n  handleEditingKegInList = (kegToEdit) => {\n    const editedMasterKegList = this.state.masterKegList.filter(keg => keg.id !== this.state.selectedKeg.id).concat(kegToEdit);\n    this.setState({\n      masterKegList: editedMasterKegList,\n      editing: false,\n      selectedKeg: null\n    });\n  }\n\n  handlePouringAPint = (kegToPourFrom) => {\n    const editedMasterKegList = this.state.masterKegList.filter(keg => keg.id !== this.state.selectedKeg.id).concat(kegToPourFrom);\n    this.setState({ \n      masterKegList: editedMasterKegList,\n      selectedKeg: kegToPourFrom\n    });\n    console.log(kegToPourFrom.pints)\n  }\n\n  render(){\n    let currentlyVisibleState = null;\n    let buttonText =  null;\n\n    if (this.state.editing) {\n      currentlyVisibleState = <EditKegForm keg = {this.state.selectedKeg} onEditKeg = {this.handleEditingKegInList} />\n      buttonText = \"Back to all the kegs!\";\n    } else if (this.state.selectedKeg != null) {\n      currentlyVisibleState = <KegDetail\n        keg = {this.state.selectedKeg}\n        onClickingDelete = {this.handleDeletingKeg}\n        onClickingEdit = {this.handleEditClick}\n        onPouringAPint = {this.handlePouringAPint} />\n      buttonText = \"Back to all the kegs!\";\n    } else if (this.state.formVisibleOnPage) {\n      currentlyVisibleState = <NewKegForm onNewKegCreation={this.handleAddingNewKegToList} />;\n      buttonText = \"Back to all the kegs!\";\n    } else {\n      currentlyVisibleState = <KegList \n        kegList = {this.state.masterKegList}\n        onKegSelection={this.handleChangingSelectedKeg} />;\n        buttonText = \"Add Keg!\"\n    }\n    return (\n      <React.Fragment>\n        {currentlyVisibleState}\n        <button onClick={this.handleClick}>{buttonText}</button>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default KegControl;\n"]},"metadata":{},"sourceType":"module"}